generator client {
  provider = "prisma-client-js"
}

datasource storeDB {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model T_User {
  Id                        Int                         @id @default(autoincrement())
  Username                  String                      @unique
  Password                  String
  isVerified                Boolean                     @default(false)
  Role                      Role                        @default(User)
  VerifyToken               String?
  CreateDate                DateTime                    @default(now())
  T_Profile                 T_Profile[]
  T_CategoryPerUser         T_CategoryPerUser[]
  T_RemindMeForAvailability T_RemindMeForAvailability[]
  T_User                    T_Order[]                   @relation("T_User")
  T_SupportUser             T_Order[]                   @relation("T_SupportUser")
  T_Cart                    T_Cart[]
}

model T_Profile {
  Id           Int       @id @default(autoincrement())
  UserId       Int       @unique
  PhotoAddress String?
  FirstName    String?
  LastName     String?
  Sex          Boolean?
  Birthday     DateTime?
  T_User       T_User    @relation(fields: [UserId], references: [Id])
}

enum Role {
  Admin
  User
}

model T_Product {
  Id                        Int                         @id @default(autoincrement())
  Title                     String
  Description               String?
  CoverImage                String?
  isVisible                 Boolean                     @default(false)
  CreateDate                DateTime                    @default(now())
  Quantity                  Int                         @default(0)
  ProductCategoryId         Int
  T_ProductCategory         T_ProductCategory           @relation(fields: [ProductCategoryId], references: [Id])
  T_Price                   T_Price[]
  T_UserCategorizedProduct  T_UserCategorizedProduct[]
  T_RemindMeForAvailability T_RemindMeForAvailability[]
  T_CartProduct             T_CartProduct[]
}

model T_ProductCategory {
  Id        Int         @id @default(autoincrement())
  Title     String
  T_Product T_Product[]
}

model T_Price {
  Id            Int             @id @default(autoincrement())
  ProductId     Int
  Price         Int
  CreateDate    DateTime        @default(now())
  T_Product     T_Product       @relation(fields: [ProductId], references: [Id])
  T_CartProduct T_CartProduct[]
}

model T_CategoryPerUser {
  Id                       Int                        @id @default(autoincrement())
  UserId                   Int
  Title                    String
  Description              String?
  isRemoved                Boolean                    @default(false)
  T_User                   T_User                     @relation(fields: [UserId], references: [Id])
  T_UserCategorizedProduct T_UserCategorizedProduct[]
}

model T_UserCategorizedProduct {
  Id                Int               @id @default(autoincrement())
  CategoryPerUserId Int
  ProductId         Int
  CreateDate        DateTime          @default(now())
  T_CategoryPerUser T_CategoryPerUser @relation(fields: [CategoryPerUserId], references: [Id])
  T_Product         T_Product         @relation(fields: [ProductId], references: [Id])
}

model T_RemindMeForAvailability {
  Id         Int       @id @default(autoincrement())
  UserId     Int
  ProductId  Int
  isValid    Boolean   @default(true)
  CreateDate DateTime  @default(now())
  T_User     T_User    @relation(fields: [UserId], references: [Id])
  T_Product  T_Product @relation(fields: [ProductId], references: [Id])
}

model T_Order {
  Id            Int           @id @default(autoincrement())
  UserId        Int
  CartId        Int
  CreateDate    DateTime      @default(now())
  UpdateDate    DateTime?
  OrderStatusId Int
  SupportUserId Int?
  isPaid        Boolean       @default(false)
  isSOSCancel   Boolean       @default(false)
  T_User        T_User        @relation("T_User", fields: [UserId], references: [Id])
  T_SupportUser T_User?       @relation("T_SupportUser", fields: [SupportUserId], references: [Id])
  T_Cart        T_Cart        @relation(fields: [CartId], references: [Id])
  T_OrderStatus T_OrderStatus @relation(fields: [OrderStatusId], references: [Id])
}

model T_OrderStatus {
  Id          Int       @id @default(autoincrement())
  Title       String
  FaTitle     String
  Description String?
  T_Order     T_Order[]
}

model T_Cart {
  Id            Int             @id @default(autoincrement())
  UserId        Int
  CreateDate    DateTime        @default(now())
  isFinilized   Boolean         @default(false)
  T_User        T_User          @relation(fields: [UserId], references: [Id])
  T_Order       T_Order[]
  T_CartProduct T_CartProduct[]
}

model T_CartProduct {
  Id        Int       @id @default(autoincrement())
  CartId    Int
  ProductId Int
  Quantity  Int       @default(1)
  PriceId   Int
  Rate      Int?
  T_Cart    T_Cart    @relation(fields: [CartId], references: [Id])
  T_Product T_Product @relation(fields: [ProductId], references: [Id])
  T_Price   T_Price   @relation(fields: [PriceId], references: [Id])

  @@unique([CartId, ProductId], name: "T_CartProduct_CartId_ProductId_key")
}
